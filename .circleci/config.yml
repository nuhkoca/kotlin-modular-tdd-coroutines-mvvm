---
version: 2.1

orbs:
  codecov: codecov/codecov@1.1.3

config_android: &config_android
  docker:
    - image: circleci/android:api-29
  working_directory: ~/code
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx1024m"
    GRADLE_OPTS: >
      -Dorg.gradle.daemon=false
      -Dorg.gradle.parallel=true
      -Dorg.gradle.workers.max=2
      -Dkotlin.incremental=false
      -Dkotlin.compiler.execution.strategy=in-process
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      yes | sdkmanager --licenses || true
      sdkmanager "platform-tools" "platforms;android-29"

ensure_android_sdk_is_ready: &ensure_android_sdk_is_ready
  run:
    name: Ensure Android SDK install is up-to-date
    command: chmod +x ./.circleci/ci-scripts/ensure-sdkmanager.sh

jobs:
  build_and_setup:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - restore_cache:
          key: >-
            jars-{{ checksum "build.gradle.kts" }}
            {{ checksum  "buildSrc/src/main/kotlin/dependencies/Dependencies.kt" }}
            -{{ checksum  "app/build.gradle.kts" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: >-
            jars-{{ checksum "build.gradle.kts" }}
            {{ checksum  "buildSrc/src/main/kotlin/dependencies/Dependencies.kt" }}
            -{{ checksum  "app/build.gradle.kts" }}
      - <<: *ensure_android_sdk_is_ready
      - run:
          name: Check Dependency Updates
          command: ./gradlew dependencyUpdates -Drevision=release
      - run:
          name: Build Debug
          command: ./gradlew assembleDebug
      - run:
          name: Run Detekt
          command: ./gradlew detekt
      - run:
          name: Run Ktlint
          command: ./gradlew ktlintCheck
      - run:
          name: Run Lint
          command: ./gradlew lintDebug
      - run:
          name: Run Spotless
          command: ./gradlew spotlessKotlinCheck
      - run:
          name: Run Unit Tests
          command: ./gradlew testDebugUnitTest testReleaseUnitTest
      - run:
          name: Generate Code Coverage
          command: ./gradlew jacocoTestReportDebug
      - run:
          name: Create build report
          command: ./gradlew build --scan
      - codecov/upload:
          flags: unittest
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: tests
      - store_artifacts:
          path: ./app/build/reports
          destination: reports/
      - persist_to_workspace:
          root: .
          paths:
            - ./app/build

workflows:
  version: 2

  build_and_test:
    jobs:
      - build_and_setup
